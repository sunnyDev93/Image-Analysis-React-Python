0		//0:ポジネガ、0ネガ、1ポジ(0/1)
1		//1:rate 検索作業中の画像縮小率(1〜10)
1		//2:step 二値化の刻み幅
43		//3:評価関数(同じ領域での競合解消ルール)(0,-1),(43,-1),(45,-1),(39,4000)
-1		//4:評価フラグ(0/1) -1大きいほど良い,他は指定値に近いほど良い
7		//大きさ
10
100


//評価関数65:内外コントラスト差最大戦略、65,-1

//寸法系
//		toku[0] = 0;//カウンタ
//		toku[1] +=i;//x重心
//		toku[2] +=j;//y重心
//		toku[3] = i;//xmin
//		toku[4] = i;//xmax
//		toku[5] = j;//ymin
//		toku[6] = j;//ymax
//		toku[7] = width;
//		toku[8] = height;50
//					9->9+15=24 16方位の長さ
//		toku[9] = len[0]
//		toku[24]= len[15];
//					25->31 %の寸法
//      	toku[25] =count %
//		toku[26] +=i;//x重心%
//		toku[27] +=j;//y重心%
//		toku[28] = i;//xmin%
//		toku[29] = i;//xmax%
//		toku[30] = j;//ymin%
//		toku[31] = j;//ymax%
	
//形状系
//		toku[39]=maxL*1000/minL;//逆扁平率
//		toku[40]=minL;//短辺
//		toku[41]=maxL;//長辺
//		toku[42]=minL*1000/maxL;//扁平率
//		toku[43]=count*1000.0/(maxL*maxL*3.14159/2.0/2.0)+0.5);//円形度
//		toku[44]=count*1000.0/(minL*maxL*3.14159/2.0/2.0)+0.5);//楕円度
//		toku[45]=juu1;//充填度(縦*横or斜め*斜めの大きいほう)
//		toku[46]=round;//外周
//		toku[47]=count/maxL;//平均幅
//		toku[48]=count/minL;//平均長さ
//		toku[49]=round*500/(minL+maxL);//ちりちり度
//		toku[50]=mindeg;//針路
//		toku[51]=0;//アスペクト２

//値系
//		toku[60] bufの値;//平均値
//		toku[61] min　bufの値
//		toku[62] max　bufの値
//		toku[63]//最初は最外郭のピクセル母数
//		toku[64]/=toku[i * DATA_N +63];//外平均
//		toku[63]=toku[i * DATA_N +62]-toku[i * DATA_N +61];//con_inner内部差
//		toku[65]=toku[i * DATA_N +60]-toku[i * DATA_N +64];//con_outer内外差

//制御変数
//		toku[DATA_N-5]=key;不合格理由
//		toku[DATA_N-4]=min0;不合格理由
//		toku[DATA_N-3]=max0;不合格理由
//		toku[DATA_N-2]=65535-abs(toku[i * DATA_N +key]-value);評価関数
//		toku[DATA_N-1]=0,-1;領域結合フラグ